<templateSet group="JavaScript">
  <template name="clogv" value="console.error(&quot;=============&gt; $VAR_STRING$: &quot;, $VAR$);$END$" description="debug log a variable" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_STRING" expression="escapeString(VAR)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tlog" value="console.error(&quot;=============&gt; $c$.$m$ @$l$&quot;);&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="c" expression="jsClassName()" defaultValue="" alwaysStopAt="false" />
    <variable name="m" expression="jsMethodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="l" expression="lineNumber()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clog" value="console.error(&quot;=============&gt;&quot;, $A$);$END$" description="Conspicious console.error message" toReformat="true" toShortenFQNames="true">
    <variable name="A" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clv" value="console.log(&quot;$A$: &quot;, $A$);$END$" description="Console.log variable" toReformat="false" toShortenFQNames="true">
    <variable name="A" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="thbc" value="toHaveBeenCalled()" description=".toHaveBeenCalled()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="thbcw" value="toHaveBeenCalledWith($var$);" description=".toHaveBeenCalledWith(...)" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="comp" value="import React from 'react';&#10;import PureRenderMixin from 'react-addons-pure-render-mixin';&#10;&#10;const $ClassName$ = React.createClass({&#10;  mixins: [PureRenderMixin],&#10;&#10;  propTypes: {&#10;  },&#10;&#10;  render: function() {&#10;    return (&#10;      $END$&#10;    );&#10;  },&#10;});&#10;&#10;export default $ClassName$;&#10;" description="Create a new React Component" toReformat="false" toShortenFQNames="true">
    <variable name="ClassName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>